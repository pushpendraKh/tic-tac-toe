{"ast":null,"code":"import _asyncToGenerator from \"/Users/pushpendra.khandelwal/Desktop/web3_training/tic-tac-toe/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Web3 from 'web3';\nimport CONSTANTS from '../constant';\nimport { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class ContractService {\n  constructor(router) {\n    var _this = this;\n    this.router = router;\n    this.loader$ = new BehaviorSubject(false);\n    this.moveIndex$ = new BehaviorSubject(null);\n    this.getAccounts = /*#__PURE__*/_asyncToGenerator(function* () {\n      try {\n        return yield window.ethereum.request({\n          method: 'eth_accounts'\n        });\n      } catch (e) {\n        return [];\n      }\n    });\n    this.getContract = () => {\n      return new window.web3.eth.Contract(CONSTANTS.abi, CONSTANTS.contractAddress);\n    };\n    // Event can be GameStarted/GameInitiated/GameEnded/PlayerMoved\n    this.parseData = event => {\n      if (!event) return {};\n      let players = event.room?.players;\n      return {\n        'id': event?.gameId,\n        'name': players[0]?.playerName ?? \"_\" + \"vs\" + players[1]?.playerName ?? \"_\",\n        'currentPlayerIndex': event?.room?.activePlayer,\n        'currentPlayerName': players[event?.room?.activePlayer ?? 0],\n        'winnerName': event?.room?.winnerPlayer?.playerName,\n        'player1': players[0]?.playerName,\n        'player2': players[1]?.playerName,\n        'gameState': this.getState(event?.room?.gameState),\n        'moveIndex': event?.moveIndex,\n        'moveValue': event?.room?.activePlayer == 0 ? \"X\" : \"0\"\n      };\n    };\n    this.getState = state => {\n      switch (state) {\n        case 0:\n          return \"NOT STARTED\";\n        case 1:\n          return \"RUNNING\";\n        case 2:\n          return \"GAME ENDED WITH WINNER\";\n        default:\n          return \"DRAW\";\n      }\n    };\n    this.openMetamask = /*#__PURE__*/_asyncToGenerator(function* () {\n      _this.loader$.next(true);\n      let addresses = yield _this.getAccounts();\n      if (!addresses.length) {\n        try {\n          addresses = yield window.ethereum.enable();\n        } catch (e) {\n          console.log(\"Unable to fetch address\");\n          return false;\n        }\n      }\n      return addresses.length ? addresses[0] : null;\n    });\n    this.joinGame = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (data) {\n        _this.loader$.next(true);\n        let accaddress = yield _this.getAccounts();\n        try {\n          const response = yield _this.getContract().methods.joinRoom({\n            playerAddress: accaddress[0],\n            playerName: data.name\n          }).send({\n            from: accaddress[0]\n          });\n        } catch (error) {\n          const errorMessage = error;\n        }\n      });\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    this.move = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(function* (gameId, data) {\n        _this.loader$.next(true);\n        let accaddress = yield _this.getAccounts();\n        try {\n          const response = yield _this.getContract().methods.move(gameId, data).send({\n            from: accaddress[0]\n          });\n          console.log(\"Player moved on \", response?.events?.PlayerMoved?.returnValues?.moveIndex);\n          return response?.events?.PlayerMoved?.returnValues?.moveIndex;\n        } catch (error) {\n          const errorMessage = error;\n        }\n      });\n      return function (_x2, _x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    this.ping = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(function* (gameId) {\n        let accaddress = yield _this.getAccounts();\n        try {\n          const response = yield _this.getContract().methods.updateRoomIfExpired(gameId).send({\n            from: accaddress[0]\n          });\n          console.log(\"Game State\", response?.events?.PlayerMoved?.returnValues?.room.state);\n        } catch (error) {\n          const errorMessage = error;\n        }\n      });\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    this.isGameRunning = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(function* (gameId) {\n        try {\n          let accaddress = yield _this.getAccounts();\n          if (!!accaddress) return false;\n          const response = yield _this.getContract().methods.isGameRunning(gameId).call({\n            from: accaddress[0]\n          });\n          console.log(\"res\", response);\n          return response;\n        } catch (error) {\n          console.log(error);\n          return false;\n        }\n      });\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    this.isGameValid = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator(function* (gameId) {\n        try {\n          let accaddress = yield _this.getAccounts();\n          console.log(\"adddd\", accaddress);\n          if (accaddress.length == 0) return false;\n          console.log(_this.getContract());\n          return _this.getContract().methods.totalGames().call((error, result) => {\n            if (error) {\n              console.log(\"error\", error);\n            } else {\n              return gameId <= result;\n            }\n            return false;\n          });\n        } catch (error) {\n          console.log(\"error\", error);\n          return false;\n        }\n      });\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n    window.web3 = new Web3(Web3.givenProvider || 'http://localhost:7545');\n    let options = {\n      filter: {\n        value: []\n      }\n    };\n    let contract = this.getContract();\n    contract.events.GameEnded(options).on('data', response => {\n      let gameState = this.parseData(response.returnValues).gameState;\n      alert(`Game State: ${gameState}`);\n      this.router.navigateByUrl(`/home`);\n    });\n    contract.events.GameStarted(options).on('data', response => {\n      console.log(response.returnValues, \"GameStarted\");\n      this.router.navigateByUrl(`/game/${this.parseData(response.returnValues).id}`);\n    });\n    contract.events.GameInitiated(options).on('data', response => {\n      console.log(response.returnValues, \"GameInitiated\");\n      this.router.navigateByUrl(`/game/${this.parseData(response.returnValues).id}`);\n    });\n    contract.events.PlayerMoved(options).on('data', response => this.moveIndex$.next(this.parseData(response.returnValues)));\n  }\n}\nContractService.ɵfac = function ContractService_Factory(t) {\n  return new (t || ContractService)(i0.ɵɵinject(i1.Router));\n};\nContractService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContractService,\n  factory: ContractService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["Web3","CONSTANTS","BehaviorSubject","ContractService","constructor","router","window","ethereum","request","method","e","web3","eth","Contract","abi","contractAddress","event","players","room","gameId","playerName","activePlayer","winnerPlayer","getState","gameState","moveIndex","state","loader$","next","addresses","getAccounts","length","enable","console","log","data","accaddress","response","getContract","methods","joinRoom","playerAddress","name","send","from","error","errorMessage","move","events","PlayerMoved","returnValues","updateRoomIfExpired","isGameRunning","call","totalGames","result","givenProvider","options","filter","value","contract","GameEnded","on","parseData","alert","navigateByUrl","GameStarted","id","GameInitiated","moveIndex$","factory","providedIn"],"sourceRoot":"","sources":["/Users/pushpendra.khandelwal/Desktop/web3_training/tic-tac-toe/ui/src/app/services/contract.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport Web3 from 'web3';\nimport CONSTANTS from '../constant';\nimport { BehaviorSubject } from \"rxjs\";\nimport { Router } from \"@angular/router\";\n\ndeclare const window: any;\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContractService {\n  public loader$ = new BehaviorSubject<boolean>(false);\n\n  public moveIndex$ = new BehaviorSubject<any>(null);\n\n  window: any;\n\n  constructor(private router: Router) {\n    window.web3 = new Web3(Web3.givenProvider || 'http://localhost:7545');\n\n    let options = {\n      filter: {\n          value: [],\n      },\n    }\n    \n    let contract = this.getContract();\n\n    contract.events.GameEnded(options)\n    .on('data', (response: any) => {\n      let gameState = this.parseData(response.returnValues).gameState\n      alert(`Game State: ${gameState}`)\n      this.router.navigateByUrl(`/home`);\n    });\n\n    contract.events.GameStarted(options)\n    .on('data', (response: any) => {\n      console.log(response.returnValues, \"GameStarted\");\n      this.router.navigateByUrl(`/game/${this.parseData(response.returnValues).id}`);\n    });\n\n    contract.events.GameInitiated(options)\n    .on('data', (response: any) => {\n      console.log(response.returnValues, \"GameInitiated\");\n      this.router.navigateByUrl(`/game/${this.parseData(response.returnValues).id}`);\n    });\n\n    contract.events.PlayerMoved(options)\n    .on('data', (response: any) => this.moveIndex$.next(this.parseData(response.returnValues)));\n  };\n\n\n  private getAccounts = async () => {\n    try {\n      return await window.ethereum.request({ method: 'eth_accounts' });\n    } catch (e) {\n      return [];\n    }\n  };\n\n  private getContract = () => {\n    return new window.web3.eth.Contract(\n      CONSTANTS.abi,\n      CONSTANTS.contractAddress\n    );\n  };\n\n\n  // Event can be GameStarted/GameInitiated/GameEnded/PlayerMoved\n  public parseData = (event: any) => {\n    if(!event) return {};\n\n    let players = event.room?.players;\n    return {\n      'id': event?.gameId,\n      'name': players[0]?.playerName ?? \"_\" + \"vs\" + players[1]?.playerName ?? \"_\",\n      'currentPlayerIndex': event?.room?.activePlayer,\n      'currentPlayerName': players[event?.room?.activePlayer ?? 0],\n      'winnerName': event?.room?.winnerPlayer?.playerName,\n      'player1': players[0]?.playerName,\n      'player2': players[1]?.playerName,\n      'gameState': this.getState(event?.room?.gameState),\n      'moveIndex': event?.moveIndex,\n      'moveValue': event?.room?.activePlayer == 0 ? \"X\" : \"0\",\n    };\n  }\n\n  private getState = (state: number) => {\n    switch (state) {\n      case 0:\n        return \"NOT STARTED\";\n      case 1:\n        return \"RUNNING\";\n      case 2: \n        return \"GAME ENDED WITH WINNER\";\n      default:\n        return \"DRAW\";      \n    }\n  }\n\n  public openMetamask = async () => {\n    this.loader$.next(true);\n    let addresses = await this.getAccounts();\n    if (!addresses.length) {\n      try {\n        addresses = await window.ethereum.enable();\n      } catch (e) {\n        console.log(\"Unable to fetch address\");\n        return false;\n      }\n    }\n    return addresses.length ? addresses[0] : null;\n  };\n\n  public joinGame = async (data: any) => {\n    this.loader$.next(true);\n    let accaddress = await this.getAccounts();\n    try {\n      const response = await this.getContract().methods\n        .joinRoom({ playerAddress: accaddress[0], playerName: data.name })\n        .send({ from: accaddress[0] });\n    } catch (error) {\n      const errorMessage = error;\n    }\n  };\n\n  public move = async (gameId: number, data: any) => {\n    this.loader$.next(true);\n    let accaddress = await this.getAccounts();\n    try {\n      const response = await this.getContract().methods\n        .move(gameId, data)\n        .send({ from: accaddress[0] });\n      console.log(\"Player moved on \", response?.events?.PlayerMoved?.returnValues?.moveIndex);\n\n      return response?.events?.PlayerMoved?.returnValues?.moveIndex;\n    } catch (error) {\n      const errorMessage = error;\n    }\n  };\n\n  public ping = async (gameId: number) => {\n    let accaddress = await this.getAccounts();\n    try {\n      const response = await this.getContract().methods\n        .updateRoomIfExpired(gameId)\n        .send({ from: accaddress[0] });\n      console.log(\"Game State\", response?.events?.PlayerMoved?.returnValues?.room.state);\n    } catch (error) {\n      const errorMessage = error;\n    }\n  };\n\n  public isGameRunning = async (gameId: number) => {\n    try {\n      let accaddress = await this.getAccounts();\n      if(!!accaddress) return false;  \n      \n      const response = await this.getContract().methods\n        .isGameRunning(gameId)\n        .call({ from: accaddress[0] });\n      console.log(\"res\", response);\n      return response;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  };\n\n  public isGameValid = async (gameId: number) => {\n    try {\n      let accaddress = await this.getAccounts();\n      console.log(\"adddd\", accaddress);  \n      if(accaddress.length == 0) return false;  \n\n      console.log(this.getContract());\n    \n      return this.getContract().methods\n        .totalGames()\n        .call((error: any, result: any) => {\n          if(error) {\n            console.log(\"error\", error);\n          } else {\n            return gameId <= result;\n          }\n          return false;\n        });\n    } catch (error) {\n      console.log(\"error\", error);\n      return false;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}