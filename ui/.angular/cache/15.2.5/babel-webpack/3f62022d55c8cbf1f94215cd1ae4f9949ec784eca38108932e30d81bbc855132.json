{"ast":null,"code":"export default {\n  abi: [{\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"uint256\",\n      \"name\": \"gameId\",\n      \"type\": \"uint256\"\n    }, {\n      \"components\": [{\n        \"components\": [{\n          \"internalType\": \"address payable\",\n          \"name\": \"playerAddress\",\n          \"type\": \"address\"\n        }, {\n          \"internalType\": \"string\",\n          \"name\": \"playerName\",\n          \"type\": \"string\"\n        }],\n        \"internalType\": \"struct TicTacToe.Player[2]\",\n        \"name\": \"players\",\n        \"type\": \"tuple[2]\"\n      }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"activePlayer\",\n        \"type\": \"uint256\"\n      }, {\n        \"internalType\": \"bool\",\n        \"name\": \"isRoomActive\",\n        \"type\": \"bool\"\n      }, {\n        \"components\": [{\n          \"internalType\": \"address payable\",\n          \"name\": \"playerAddress\",\n          \"type\": \"address\"\n        }, {\n          \"internalType\": \"string\",\n          \"name\": \"playerName\",\n          \"type\": \"string\"\n        }],\n        \"internalType\": \"struct TicTacToe.Player\",\n        \"name\": \"winnerPlayer\",\n        \"type\": \"tuple\"\n      }, {\n        \"internalType\": \"uint256[9]\",\n        \"name\": \"board\",\n        \"type\": \"uint256[9]\"\n      }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"lastPlayedTime\",\n        \"type\": \"uint256\"\n      }, {\n        \"internalType\": \"uint8\",\n        \"name\": \"movedRecorded\",\n        \"type\": \"uint8\"\n      }, {\n        \"internalType\": \"enum TicTacToe.GameState\",\n        \"name\": \"state\",\n        \"type\": \"uint8\"\n      }],\n      \"indexed\": false,\n      \"internalType\": \"struct TicTacToe.Room\",\n      \"name\": \"room\",\n      \"type\": \"tuple\"\n    }],\n    \"name\": \"GameEnded\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"uint256\",\n      \"name\": \"gameId\",\n      \"type\": \"uint256\"\n    }, {\n      \"components\": [{\n        \"components\": [{\n          \"internalType\": \"address payable\",\n          \"name\": \"playerAddress\",\n          \"type\": \"address\"\n        }, {\n          \"internalType\": \"string\",\n          \"name\": \"playerName\",\n          \"type\": \"string\"\n        }],\n        \"internalType\": \"struct TicTacToe.Player[2]\",\n        \"name\": \"players\",\n        \"type\": \"tuple[2]\"\n      }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"activePlayer\",\n        \"type\": \"uint256\"\n      }, {\n        \"internalType\": \"bool\",\n        \"name\": \"isRoomActive\",\n        \"type\": \"bool\"\n      }, {\n        \"components\": [{\n          \"internalType\": \"address payable\",\n          \"name\": \"playerAddress\",\n          \"type\": \"address\"\n        }, {\n          \"internalType\": \"string\",\n          \"name\": \"playerName\",\n          \"type\": \"string\"\n        }],\n        \"internalType\": \"struct TicTacToe.Player\",\n        \"name\": \"winnerPlayer\",\n        \"type\": \"tuple\"\n      }, {\n        \"internalType\": \"uint256[9]\",\n        \"name\": \"board\",\n        \"type\": \"uint256[9]\"\n      }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"lastPlayedTime\",\n        \"type\": \"uint256\"\n      }, {\n        \"internalType\": \"uint8\",\n        \"name\": \"movedRecorded\",\n        \"type\": \"uint8\"\n      }, {\n        \"internalType\": \"enum TicTacToe.GameState\",\n        \"name\": \"state\",\n        \"type\": \"uint8\"\n      }],\n      \"indexed\": false,\n      \"internalType\": \"struct TicTacToe.Room\",\n      \"name\": \"room\",\n      \"type\": \"tuple\"\n    }],\n    \"name\": \"GameInitiated\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"uint256\",\n      \"name\": \"gameId\",\n      \"type\": \"uint256\"\n    }, {\n      \"components\": [{\n        \"components\": [{\n          \"internalType\": \"address payable\",\n          \"name\": \"playerAddress\",\n          \"type\": \"address\"\n        }, {\n          \"internalType\": \"string\",\n          \"name\": \"playerName\",\n          \"type\": \"string\"\n        }],\n        \"internalType\": \"struct TicTacToe.Player[2]\",\n        \"name\": \"players\",\n        \"type\": \"tuple[2]\"\n      }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"activePlayer\",\n        \"type\": \"uint256\"\n      }, {\n        \"internalType\": \"bool\",\n        \"name\": \"isRoomActive\",\n        \"type\": \"bool\"\n      }, {\n        \"components\": [{\n          \"internalType\": \"address payable\",\n          \"name\": \"playerAddress\",\n          \"type\": \"address\"\n        }, {\n          \"internalType\": \"string\",\n          \"name\": \"playerName\",\n          \"type\": \"string\"\n        }],\n        \"internalType\": \"struct TicTacToe.Player\",\n        \"name\": \"winnerPlayer\",\n        \"type\": \"tuple\"\n      }, {\n        \"internalType\": \"uint256[9]\",\n        \"name\": \"board\",\n        \"type\": \"uint256[9]\"\n      }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"lastPlayedTime\",\n        \"type\": \"uint256\"\n      }, {\n        \"internalType\": \"uint8\",\n        \"name\": \"movedRecorded\",\n        \"type\": \"uint8\"\n      }, {\n        \"internalType\": \"enum TicTacToe.GameState\",\n        \"name\": \"state\",\n        \"type\": \"uint8\"\n      }],\n      \"indexed\": false,\n      \"internalType\": \"struct TicTacToe.Room\",\n      \"name\": \"room\",\n      \"type\": \"tuple\"\n    }],\n    \"name\": \"GameStarted\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"uint256\",\n      \"name\": \"gameId\",\n      \"type\": \"uint256\"\n    }, {\n      \"components\": [{\n        \"components\": [{\n          \"internalType\": \"address payable\",\n          \"name\": \"playerAddress\",\n          \"type\": \"address\"\n        }, {\n          \"internalType\": \"string\",\n          \"name\": \"playerName\",\n          \"type\": \"string\"\n        }],\n        \"internalType\": \"struct TicTacToe.Player[2]\",\n        \"name\": \"players\",\n        \"type\": \"tuple[2]\"\n      }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"activePlayer\",\n        \"type\": \"uint256\"\n      }, {\n        \"internalType\": \"bool\",\n        \"name\": \"isRoomActive\",\n        \"type\": \"bool\"\n      }, {\n        \"components\": [{\n          \"internalType\": \"address payable\",\n          \"name\": \"playerAddress\",\n          \"type\": \"address\"\n        }, {\n          \"internalType\": \"string\",\n          \"name\": \"playerName\",\n          \"type\": \"string\"\n        }],\n        \"internalType\": \"struct TicTacToe.Player\",\n        \"name\": \"winnerPlayer\",\n        \"type\": \"tuple\"\n      }, {\n        \"internalType\": \"uint256[9]\",\n        \"name\": \"board\",\n        \"type\": \"uint256[9]\"\n      }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"lastPlayedTime\",\n        \"type\": \"uint256\"\n      }, {\n        \"internalType\": \"uint8\",\n        \"name\": \"movedRecorded\",\n        \"type\": \"uint8\"\n      }, {\n        \"internalType\": \"enum TicTacToe.GameState\",\n        \"name\": \"state\",\n        \"type\": \"uint8\"\n      }],\n      \"indexed\": false,\n      \"internalType\": \"struct TicTacToe.Room\",\n      \"name\": \"room\",\n      \"type\": \"tuple\"\n    }, {\n      \"indexed\": false,\n      \"internalType\": \"uint256\",\n      \"name\": \"moveIndex\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"PlayerMoved\",\n    \"type\": \"event\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"GAME_TIMEOUT\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"STAKE\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"contractBalance\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"gameId\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"getBoardForRoom\",\n    \"outputs\": [{\n      \"internalType\": \"uint256[9]\",\n      \"name\": \"\",\n      \"type\": \"uint256[9]\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"gameId\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"isGameRunning\",\n    \"outputs\": [{\n      \"internalType\": \"bool\",\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"components\": [{\n        \"internalType\": \"address payable\",\n        \"name\": \"playerAddress\",\n        \"type\": \"address\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"playerName\",\n        \"type\": \"string\"\n      }],\n      \"internalType\": \"struct TicTacToe.Player\",\n      \"name\": \"player\",\n      \"type\": \"tuple\"\n    }],\n    \"name\": \"joinRoom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"gameId\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint8\",\n      \"name\": \"boardIndex\",\n      \"type\": \"uint8\"\n    }],\n    \"name\": \"move\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"rooms\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"activePlayer\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"bool\",\n      \"name\": \"isRoomActive\",\n      \"type\": \"bool\"\n    }, {\n      \"components\": [{\n        \"internalType\": \"address payable\",\n        \"name\": \"playerAddress\",\n        \"type\": \"address\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"playerName\",\n        \"type\": \"string\"\n      }],\n      \"internalType\": \"struct TicTacToe.Player\",\n      \"name\": \"winnerPlayer\",\n      \"type\": \"tuple\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"lastPlayedTime\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint8\",\n      \"name\": \"movedRecorded\",\n      \"type\": \"uint8\"\n    }, {\n      \"internalType\": \"enum TicTacToe.GameState\",\n      \"name\": \"state\",\n      \"type\": \"uint8\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"totalGames\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"gameId\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"updateRoomIfExpired\",\n    \"outputs\": [{\n      \"internalType\": \"enum TicTacToe.GameState\",\n      \"name\": \"\",\n      \"type\": \"uint8\"\n    }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }],\n  contractAddress: '0x5e3Ad148730EcEFDA58fDD3e38779197e3aa5Bec'\n};","map":{"version":3,"mappings":"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","names":["abi","contractAddress"],"sourceRoot":"","sources":["/Users/pushpendra.khandelwal/Desktop/web3_training/tic-tac-toe/ui/src/app/constant.ts"],"sourcesContent":["export default {\n  abi: [\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"gameId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"components\": [\n                {\n                  \"internalType\": \"address payable\",\n                  \"name\": \"playerAddress\",\n                  \"type\": \"address\"\n                },\n                {\n                  \"internalType\": \"string\",\n                  \"name\": \"playerName\",\n                  \"type\": \"string\"\n                }\n              ],\n              \"internalType\": \"struct TicTacToe.Player[2]\",\n              \"name\": \"players\",\n              \"type\": \"tuple[2]\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"activePlayer\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"isRoomActive\",\n              \"type\": \"bool\"\n            },\n            {\n              \"components\": [\n                {\n                  \"internalType\": \"address payable\",\n                  \"name\": \"playerAddress\",\n                  \"type\": \"address\"\n                },\n                {\n                  \"internalType\": \"string\",\n                  \"name\": \"playerName\",\n                  \"type\": \"string\"\n                }\n              ],\n              \"internalType\": \"struct TicTacToe.Player\",\n              \"name\": \"winnerPlayer\",\n              \"type\": \"tuple\"\n            },\n            {\n              \"internalType\": \"uint256[9]\",\n              \"name\": \"board\",\n              \"type\": \"uint256[9]\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"lastPlayedTime\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"movedRecorded\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"enum TicTacToe.GameState\",\n              \"name\": \"state\",\n              \"type\": \"uint8\"\n            }\n          ],\n          \"indexed\": false,\n          \"internalType\": \"struct TicTacToe.Room\",\n          \"name\": \"room\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"GameEnded\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"gameId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"components\": [\n                {\n                  \"internalType\": \"address payable\",\n                  \"name\": \"playerAddress\",\n                  \"type\": \"address\"\n                },\n                {\n                  \"internalType\": \"string\",\n                  \"name\": \"playerName\",\n                  \"type\": \"string\"\n                }\n              ],\n              \"internalType\": \"struct TicTacToe.Player[2]\",\n              \"name\": \"players\",\n              \"type\": \"tuple[2]\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"activePlayer\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"isRoomActive\",\n              \"type\": \"bool\"\n            },\n            {\n              \"components\": [\n                {\n                  \"internalType\": \"address payable\",\n                  \"name\": \"playerAddress\",\n                  \"type\": \"address\"\n                },\n                {\n                  \"internalType\": \"string\",\n                  \"name\": \"playerName\",\n                  \"type\": \"string\"\n                }\n              ],\n              \"internalType\": \"struct TicTacToe.Player\",\n              \"name\": \"winnerPlayer\",\n              \"type\": \"tuple\"\n            },\n            {\n              \"internalType\": \"uint256[9]\",\n              \"name\": \"board\",\n              \"type\": \"uint256[9]\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"lastPlayedTime\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"movedRecorded\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"enum TicTacToe.GameState\",\n              \"name\": \"state\",\n              \"type\": \"uint8\"\n            }\n          ],\n          \"indexed\": false,\n          \"internalType\": \"struct TicTacToe.Room\",\n          \"name\": \"room\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"GameInitiated\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"gameId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"components\": [\n                {\n                  \"internalType\": \"address payable\",\n                  \"name\": \"playerAddress\",\n                  \"type\": \"address\"\n                },\n                {\n                  \"internalType\": \"string\",\n                  \"name\": \"playerName\",\n                  \"type\": \"string\"\n                }\n              ],\n              \"internalType\": \"struct TicTacToe.Player[2]\",\n              \"name\": \"players\",\n              \"type\": \"tuple[2]\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"activePlayer\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"isRoomActive\",\n              \"type\": \"bool\"\n            },\n            {\n              \"components\": [\n                {\n                  \"internalType\": \"address payable\",\n                  \"name\": \"playerAddress\",\n                  \"type\": \"address\"\n                },\n                {\n                  \"internalType\": \"string\",\n                  \"name\": \"playerName\",\n                  \"type\": \"string\"\n                }\n              ],\n              \"internalType\": \"struct TicTacToe.Player\",\n              \"name\": \"winnerPlayer\",\n              \"type\": \"tuple\"\n            },\n            {\n              \"internalType\": \"uint256[9]\",\n              \"name\": \"board\",\n              \"type\": \"uint256[9]\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"lastPlayedTime\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"movedRecorded\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"enum TicTacToe.GameState\",\n              \"name\": \"state\",\n              \"type\": \"uint8\"\n            }\n          ],\n          \"indexed\": false,\n          \"internalType\": \"struct TicTacToe.Room\",\n          \"name\": \"room\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"GameStarted\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"gameId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"components\": [\n            {\n              \"components\": [\n                {\n                  \"internalType\": \"address payable\",\n                  \"name\": \"playerAddress\",\n                  \"type\": \"address\"\n                },\n                {\n                  \"internalType\": \"string\",\n                  \"name\": \"playerName\",\n                  \"type\": \"string\"\n                }\n              ],\n              \"internalType\": \"struct TicTacToe.Player[2]\",\n              \"name\": \"players\",\n              \"type\": \"tuple[2]\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"activePlayer\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"isRoomActive\",\n              \"type\": \"bool\"\n            },\n            {\n              \"components\": [\n                {\n                  \"internalType\": \"address payable\",\n                  \"name\": \"playerAddress\",\n                  \"type\": \"address\"\n                },\n                {\n                  \"internalType\": \"string\",\n                  \"name\": \"playerName\",\n                  \"type\": \"string\"\n                }\n              ],\n              \"internalType\": \"struct TicTacToe.Player\",\n              \"name\": \"winnerPlayer\",\n              \"type\": \"tuple\"\n            },\n            {\n              \"internalType\": \"uint256[9]\",\n              \"name\": \"board\",\n              \"type\": \"uint256[9]\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"lastPlayedTime\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint8\",\n              \"name\": \"movedRecorded\",\n              \"type\": \"uint8\"\n            },\n            {\n              \"internalType\": \"enum TicTacToe.GameState\",\n              \"name\": \"state\",\n              \"type\": \"uint8\"\n            }\n          ],\n          \"indexed\": false,\n          \"internalType\": \"struct TicTacToe.Room\",\n          \"name\": \"room\",\n          \"type\": \"tuple\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"moveIndex\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"PlayerMoved\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"GAME_TIMEOUT\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"STAKE\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"contractBalance\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"gameId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getBoardForRoom\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[9]\",\n          \"name\": \"\",\n          \"type\": \"uint256[9]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"gameId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"isGameRunning\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"address payable\",\n              \"name\": \"playerAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"string\",\n              \"name\": \"playerName\",\n              \"type\": \"string\"\n            }\n          ],\n          \"internalType\": \"struct TicTacToe.Player\",\n          \"name\": \"player\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"name\": \"joinRoom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"gameId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint8\",\n          \"name\": \"boardIndex\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"name\": \"move\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"rooms\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"activePlayer\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"isRoomActive\",\n          \"type\": \"bool\"\n        },\n        {\n          \"components\": [\n            {\n              \"internalType\": \"address payable\",\n              \"name\": \"playerAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"string\",\n              \"name\": \"playerName\",\n              \"type\": \"string\"\n            }\n          ],\n          \"internalType\": \"struct TicTacToe.Player\",\n          \"name\": \"winnerPlayer\",\n          \"type\": \"tuple\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"lastPlayedTime\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint8\",\n          \"name\": \"movedRecorded\",\n          \"type\": \"uint8\"\n        },\n        {\n          \"internalType\": \"enum TicTacToe.GameState\",\n          \"name\": \"state\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalGames\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"gameId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"updateRoomIfExpired\",\n      \"outputs\": [\n        {\n          \"internalType\": \"enum TicTacToe.GameState\",\n          \"name\": \"\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ],\n  contractAddress: '0x5e3Ad148730EcEFDA58fDD3e38779197e3aa5Bec',\n};\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}